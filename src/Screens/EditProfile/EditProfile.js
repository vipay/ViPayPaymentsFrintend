import React, {Component, useEffect, useState} from 'react';
import {
  View,
  Text,
  StyleSheet,
  Image,
  ImageBackground,
  Pressable,
  TouchableOpacity,
  StatusBar,
  TextInput,
} from 'react-native';
import {ScrollView} from 'react-native-gesture-handler';
import HeaderComp from '../../Components/HeaderComp';
import {ProfileListComp} from '../../Components/ProfileListComp';
import WrapperContainer from '../../Components/WrapperContainer';
import imagePath from '../../constants/imagePath';
import strings from '../../constants/lang';
import colors from '../../styles/colors';
import {moderateScale} from '../../styles/responsiveSize';
import styles from './styles';
import QRCode from 'react-native-qrcode-svg';
import ButtonComp from '../../Components/ButtonComp';
import navigationStrings from '../../constants/navigationStrings';
import VerifyEmail from '../../Components/VerifyEmail';
import { useSelector } from 'react-redux';
import { showError, showSuccess } from '../../helper/helperFunctions';
import actions from '../../redux/actions';


const EditProfile = ({navigation}) => {
  const goBack = () => {
    navigation.goBack();
};
const data = useSelector(state => state.auth.userData);
const [state, setState] = useState({
 name:'',
 email:''
 
  
});
const {name, email} = state;
const updateState = data => setState(state => ({...state, ...data}));

useEffect(()=>{
  // data.email==null?data.email='':null
  // data.name==null?data.name='':null
  getdata();
   updateState({name:data.name, email:data.email})
},[])

 const getdata=()=>
 {
  let apidata={phone_no:data.phone_no}
  actions.edit_profile(apidata)
  .then(res=>{
    updateState({name: res.data.name,email: res.data.email })
    // showSuccess('Update Successful')
   
    console.log(res,'show sucess')
  })
  .catch( err=>
    {
      console.log(err)
    })

 }


const editprofile=()=>
{
  let apidata={name:name,email:email}
  if (name==null )
  {
    showError("Name Can't be Empty")
  }
  else if(name.length==0)
  {
     showError("Name Can't be Empty")
  }
  else if (email== null)
  {
     showError("Email Can't be Empty")
  }
  else if (email.length==0)
  {
    showError("Email Can't be Empty")
  }
  // else if (email== null)
  // {
  //    showError("email empty")
  // }
  else
  actions.edit_profile(apidata)
  .then(res=>{
    // updateState({name: res.data.name,email: res.data.email })
    showSuccess('Update Successful')
    toggleModal()
    console.log(res,'show sucess')
  })
  .catch( err=>
    {
      console.log(err)
    })
}

//  console.log(data,'edittttt profile')

const [activee , setactivee] = useState(false);
const toggleModal = ()=>{
    setactivee(!activee)
}
  return (
    <WrapperContainer>
      <View style={styles.container}>

          <HeaderComp text={strings.Editprofile}
          onBackPress={goBack}/>
        
       <TouchableOpacity>
           <View style={styles.changepic}>
               <Image style={styles.profilepic} source={imagePath.profile3}/>
               <View style={styles.textView}>
               <Text style={styles.Changeprofilepicture}>{strings.Changeprofilepicture}</Text>
               <Image source={imagePath.ic_gray_arrow}/>
               </View>
           </View>
       </TouchableOpacity>
        
        <View style={styles.bgView}>
 
            <TextInput style={styles.ProfileName}
             
             onChangeText={value => updateState({name: value})}
            value={state.name}
            ></TextInput>
        </View>
        <View style={styles.bgView}>
            <Text style={styles.ProfileName}>{data.pay_id}</Text>
        </View>
        <Text style={styles.vipayidtxt}>{strings.ViPayIDisautogenerated}</Text>
        <View style={styles.bgView}>
            <TextInput 
            
            onChangeText={value => updateState({email: value})}
            value={state.email}
            style={styles.ProfileEmail}></TextInput>
        </View>
        <View style={styles.phoneView}>
            <Text style={styles.countrycode}>{'+'+data.country_code}</Text>
            <Text style={styles.line}/>
            <Text style={styles.Number}>{data.phone_no}</Text>
        </View>
        <VerifyEmail showModal={activee} renderModal={toggleModal} />
        <View style={styles.btn}>
            <ButtonComp btnText={strings.Update} onPress={editprofile}
            />
        </View>
      </View>
    </WrapperContainer>
  );
};
export default EditProfile;
